Логика работы функции route_analysis 
модуля schedule/services/timestamp.py

Выбор оптимальных маршрутов между двумя остановками, заданными названиями.
- Определяет группы остановок отправления (1) и прибытия (2)
- Выбирает для каждого маршрута (автобуса) оптимальные остановки (1) и (2). 
Возвращает список автобусов с: 
- подходящими остановками (1) и (2), 
- конечные остановки этого маршрута (от какой к какой), 
- приоритет маршрута (используется для отбора внутри функции, 
  но нужен и дальше для комментариев к маршруту).

В основной части функции 2 вложенных цикла, первый перебирает ватобусы,
проходящие через остановки (1), второй перебирает комбинации 
всех остановок из групп отправления и групп прибытия.
(группы - остановки находящиеся радом и рассматривающиеся как одна остановка 
для (1) или (2).)

Каждая комбинация остановок это 2 конкретных объекта остановок, откуда 
отправляется выбранный автобус и куда приходит (между какими конкретными 
остановками из групп). Пара может быть выбрана, для дальнейшего построения 
расписания или проигнорирована, в соответствии с фильтрами.

Фильтры.
Фильтрация маршрутов происходит на разных уровнях. Для начала исключаются 
остановки которых нет в маршруте, затем одинаковые остановки (1) и (2).

УРОВЕНЬ 1. Фильтрация методом BestRouter.find_all_distance_variants.
На этом уровне имеются только 2 остановки (2 объекта остановок), 
определяются все возможные маршруты между ними (прямой или через конечные) и:
- для каждой пары выбирается 1 наилучший вариант (критерии отбора в описании метода).

УРОВЕНЬ 2. Фильтр методом Filter.pair_filter.
На этом уровне отбираются ограниченное количество пар, заданное количеством
частей маршрута (для каждой части 1 пара остановок). Добавляется в список 
маршрутов автобуса. Управление списком и фильтром в описании метода и класса.

УРОВЕНЬ 3. Итоговая фильтрация методом Filter.get_bus_list.
Осуществляется когда собраны списки маршрутов по всем автобусам. 
Отбирает лучшие по приоритету автобусы. Подробнее в описании метода.
