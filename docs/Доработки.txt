- Неправильные конечные в новом алгоритме

- объединить в группы, остановки через дорогу но с разными названиями
- в случае с маршрутом школа 11 школа 8 идет 15 автобус, но не показывает, он идет через конечную.
- появились 2 остановки с одним названием в маршруте, например автобус №7 -
  Зеленая, разобраться как это отразится на работе.
- появились остановки с одним названием автобусы могут идти на одну остановку,
  например Чехова - Рынок. Нужно разбираться с остановками отправления,
  как сообщать пользователю о таких остановках (как их называть).
- Рассматривал вариант показа автобусов идущих через конечную.
- Обновить списки избранного для всех пользователей 
  в соответствии с новыми требованииями. Команда python manage.py migrate_favorites

- когда 2 последовательные остановки в одной группе, один автобус
  называется с каждой из них, т.е. Поликлиника, через 1 минуту Проектный институт.
- в случае с маршрутом школа 11 школа школа 8 запрос на алисе не работает
- Не понимает запрос "от городской поликлиники до дома культуры".
- Можно добавить объекты которые не будут рассматриваться как остановки,
  но будут объединяться с ними в группы и с остановок группы можно строить маршрут
  от этого объекта или к нему. Нариме: Райисполком (Горисполком, Исполком, Белый дом ...).
- Как расширение объектов можно привязать карту и получать координаты объектов,
  затем проверять их на близость к координатам остановок. К примеру объекты на рассоянии
  416 метров (5 минут пешком), или 250 ( 5 минут медленным шагом).
- Внедрить нейросеть, передавать ей в качестве промпта описание проекта
  (инструкцию использования) чтобы она могла отвечать на произвольные запросы
  которые не прошли проверку на наличие в них названий 2 остановок (объектов).
  Или предупреждать о другом городе, если названия не знакомые.

Деплой 23.09.2025
Загрузить      + git pull
Замена .env    + скопировать
Миграция       + python manage.py migrate
Исправление БД + python manage.py migrate_favorites.py
Расписание     + скопировать из локального на сервер result.json
Импорт         + python manage.py import
Запуск         + python manage.py runserver
Запись имен    + в админке
Создание групп + в админке
