# –ö–ª–∞—Å—Å—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –≤ –æ–∫–Ω–µ —á–∞—Ç–∞.
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π...

import re
import json
import random
import string
import logging
from telebot import types
from datetime import datetime
from functools import cmp_to_key

from django.conf import settings

from tbot.models import IdsForName
from schedule.models import BusStop, Schedule, Holiday, StopGroup
from schedule.services.timestamp import route_analysis, time_generator, preparing_bus_list, answer_by_two_busstop
from utils.translation import get_day_string, get_day_number
from utils.sorted_buses import compare_name, sorted_buses
from tbot.services.functions import date_now
from schedule.services.full_schedule import full_schedule

logger = logging.getLogger('alisa')

class Executor:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –≤ –æ–∫–Ω–µ —á–∞—Ç–∞.
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—â–∏–µ –∞—Ç—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –Ω–∞—á–∞–ª–µ,
    –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏—Ö –ø—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è—Ö, –∏ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
    """

    def __init__(self, bot, user, bot_object, action=None):
        """
        –ü–æ—è—Å–Ω–µ–Ω–∏—è –ø–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º: –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏.
        –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ - —ç—Ç–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–Ω—ã –≤ —á–∞—Ç–µ, –∏–º–µ—é—Ç —Å–≤–æ–π id –∏ –∫–ª–∞—Å—Å (–∫–ª–∞—Å—Å –∑–Ω–∞–µ—Ç –≥–¥–µ –µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å).
        –í—Ä–µ–º–µ–Ω–Ω—ã–µ - —ç—Ç–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å–ª–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —É–∂–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Ö id –º–µ–Ω—è–µ—Ç—Å—è.
        –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ –∑–∞–ø—Ä–æ—Å –æ—Ç –Ω–∏—Ö –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏—Ö –∫–ª–∞—Å—Å—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å—Ä–∞–∑—É
        (–¥–ª—è –Ω–∏—Ö –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–∏–µ —ç—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã).
        id –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ IdsForName, –æ–¥–Ω–∞ –¥–ª—è –∫–ª–∞—Å—Å–∞.
        """
        # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç–∞
        self.user = user  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        self.bot_object = bot_object  # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞–º
        self.bot = bot  # –ë–æ—Ç

        if type(bot_object) == types.Message:
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞
            self.kb_id, self.key_name = None, None  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏
            self.message = bot_object  # –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        else:
            self.kb_id, self.key_name = bot_object.data.split('_')
            self.key_name = IdsForName.get_name_by_id(self.key_name)  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
            self.message = bot_object.message  # –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        data = dict()
        if action is None:
            # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
            data = json.loads(user.parameter.addition)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –ë–î

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç–∞
        self.stage = data.get('stage', 0)  # –≠—Ç–∞–ø –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
        self.kb_wait = data.get('kb_id', [])  # ids –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –æ–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞
        self.other_fields = data.get('other_fields', dict())  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è

        # –ü–æ–ª—É—á–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏ –∑–∞–ø–∏—à–µ–º –µ–≥–æ –≤ –ë–î
        user.parameter.class_name = self.__class__.__name__
        user.parameter.save()
        self.answer = self.execute()  # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç —á—Ç–æ –¥–µ–ª–∞–ª–∏

        if self.answer:
            self.save()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –ë–î

    def execute(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ. –í –∫–ª–∞—Å—Å–∞—Ö - –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è.
        –û–Ω–∏ –¥–æ–ª–∂–Ω—ã –≤–µ—Ä–Ω—É—Ç—å —á—Ç–æ-—Ç–æ –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –∏–Ω–∞—á–µ None."""
        pass

    def save(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–π—Å—Ç–≤–∏—è –≤ –ë–î."""
        data = {
            'stage': self.stage,
            'kb_id': self.kb_wait,
            'other_fields': self.other_fields
        }
        self.user.parameter.addition = json.dumps(data, ensure_ascii=False)
        self.user.parameter.save()

    def keyboard(self, message: str, names: (list, dict), row=1, replace=False, kd_id=None):
        """–°–æ–∑–¥–∞–µ—Ç InlineKeyboardMarkup –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
        –ú–æ–∂–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏—à (–≥–∞–ª–æ—á–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º),
        –¥–ª—è —ç—Ç–æ–≥–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–ø–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω —Å–ª–æ–≤–∞—Ä—å: {name: True/False}.
        –ï—Å–ª–∏ replace=True, –∑–∞–º–µ–Ω—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —á–∞—Ç–µ.
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã), —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–ª–∞–≤–∏—à,
        –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞–≤–∏—à –≤ —Å—Ç—Ä–æ–∫–µ –∏ —Ñ–ª–∞–≥ –∑–∞–º–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (—Ç–æ–≥–¥–∞ –æ–Ω –Ω–µ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ).
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –û–Ω —Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–ª–∞–≤–∏—à: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä_–Ω–∞–∑–≤–∞–Ω–∏–µ.
        –í—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —á–∞—Ç.
        –î–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª–∞–≤–∏—à –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏, –ø–æ—Å–∫–æ–ª—å–∫—É –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
        –Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–Ω–æ–ø–∫–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ.
        –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ IdsForName. –ò –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω.
        """
        if kd_id is None:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            characters = string.ascii_letters + string.digits
            kd_id = ''.join(random.choice(characters) for _ in range(6))

        # –ì–æ—Ç–æ–≤–∏–º —Å–ª–æ–≤–∞—Ä—å –Ω–∞–∑–≤–∞–Ω–∏–π –∫–ª–∞–≤–∏—à, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω —Å–ø–∏—Å–æ–∫
        if isinstance(names, dict):
            name_dict = names
        else:
            name_dict = {name: False for name in names}

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard = types.InlineKeyboardMarkup(row_width=row)
        buttons = []
        for name, selected in name_dict.items():
            sel = '‚ö°Ô∏è ' if selected else ''
            id_name = IdsForName.get_id_by_name(name)  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ –∏–º–µ–Ω–∏
            button = types.InlineKeyboardButton(text=sel + name, callback_data=f'{kd_id}_{id_name}')
            buttons.append(button)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä–∞–∑–º–µ—Ç–∫—É –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑ –≤ —Å—Ç—Ä–æ–∫–µ
        for i in range(0, len(buttons), row):
            keyboard.add(*buttons[i:i + row])
        if replace:
            self.bot.edit_message_text(chat_id=self.message.chat.id, message_id=self.message.message_id,
                                       text=message, reply_markup=keyboard)
        else:
            self.bot.send_message(self.message.chat.id, message, reply_markup=keyboard)

        return kd_id


class ExeAddBusStop(Executor):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –ú–æ–∏ –º–∞—Ä—à—Ä—É—Ç—ã."""

    def execute(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."""
        answer = None
        if self.stage == 0:
            # ---------------- 1 —ç—Ç–∞–ø - –∑–∞–ø—Ä–æ—Å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ----------------
            # –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π, –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            stops = BusStop.get_all_bus_stops_names()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –µ–µ id
            self.kb_wait = [self.keyboard('üö© üö© üö© –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', stops, row=2)]
            answer = f'{self.__class__.__name__} - {self.stage}'

        # –î–∞–ª—å–Ω–µ–π—à–∏–µ —ç—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –æ—Ç –Ω—É–∂–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        run = True if self.kb_id in self.kb_wait else False

        if run and self.stage == 1:
            # ---------------- 2 —ç—Ç–∞–ø - –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ----------------
            # –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π, –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            for_kb = BusStop.get_all_bus_stops_names()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            self.kb_wait = [self.keyboard('üö© üö© üö© –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:', for_kb, row=2)]
            self.other_fields['start'] = self.key_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
            answer = f'{self.__class__.__name__} - {self.stage}'

        if run and self.stage == 2:
            # ---------------- 3 —ç—Ç–∞–ø - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ ----------------
            # –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
            # –¢–µ—Ö, —á—Ç–æ –∏–¥—É—Ç —Å –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–±—ã—Ç–∏—è
            start_name = self.other_fields['start']
            finish_name = self.key_name

            try:
                # –§–æ—Ä–º–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—ã –Ω–∞–∑–≤–∞–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è
                stops_lists = StopGroup.get_group_by_stop_name(start_name, finish_name)
            except ValueError:
                # –í—ã–±—Ä–∞–Ω–∞ –æ–¥–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è
                self.bot.send_message(self.message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–Ω—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è.')
                self.stage = 0
                return f'{self.__class__.__name__} - {self.stage}'

            start_list = stops_lists["start_names"]  # –ù–∞–∑–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è

            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–≤—Ç–æ–±—É—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—Ö–æ–¥—è—Ç –∏–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            buses = BusStop.get_bus_by_stop(start_list)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–≤—Ç–æ–±—É—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç –ø–æ –Ω—É–∂–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É
            # —Å –ª—é–±–æ–π –∏–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –ª—é–±—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–∏–±—ã—Ç–∏—è
            # –°–æ–±–∏—Ä–∞–µ–º –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—å –ø–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º
            # –Ω–æ–º–µ—Ä–æ–≤ –∞–≤—Ç–æ–±—É—Å–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π.

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å–æ –≤—Å–µ–º–∏ –∞–≤—Ç–æ–±—É—Å–∞–º–∏, –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—á–µ—Ç–∞–Ω–∏—è
            # –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è
            analysis = route_analysis(start_name, finish_name)

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–æ–∫: start - finish.
            # –ê –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö —Å–ø–∏—Å–∫–∏ –∞–≤—Ç–æ–±—É—Å–æ–≤.
            # –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 1 –∏ 2
            bs_dict = {}
            for item in analysis:
                if item['priority'] not in [1, 2]:
                    continue  # –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
                name = f"{item['start'].name} - {item['finish'].name}"
                bus = item['bus'].number
                if name not in bs_dict:
                    bs_dict[name] = [bus]
                else:
                    bs_dict[name].append(bus)
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ä—Ç–∏—Ä—É–µ–º
            for key, value in bs_dict.items():
                bs_dict[key] = sorted_buses(set(value))

            if not bs_dict:
                self.bot.send_message(self.message.chat.id, '‚ö†Ô∏è –ú–µ–∂–¥—É —ç—Ç–∏–º–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞. '
                                                            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.')
                self.stage = 0
                return f'{self.__class__.__name__} - {self.stage}'
            
            # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
            favorites = json.loads(self.user.parameter.favorites)
            base_name = f'{start_name} - {finish_name}'
            name = base_name
            i = 1
            # –ò—â–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
            while name in favorites:
                name = f'{base_name} {str(i)}'
                i += 1

            # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
            string = (f"üö• –ù–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö {', '.join(start_list)} –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –∞–≤—Ç–æ–±—É—Å—ã:\n" +
                      f', '.join([str(bus.number) for bus in buses]) +
                      f'.\n\nüöå –í–∞–º –ø–æ–¥—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–±—É—Å—ã:\n')
            select_buses = set()
            for bs_name, buses_list in bs_dict.items():
                string += f'üö• {bs_name}:\n' + ", ".join(buses_list) + "."
                select_buses.update(buses_list)

            select_buses = list(select_buses)
            logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user.user_name} {self.user.user_id} –¥–æ–±–∞–≤–∏–ª –º–∞—Ä—à—Ä—É—Ç "{base_name}".')

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–≤—Ç–æ–±—É—Å–æ–≤ –∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º –≤–≤–µ—Å—Ç–∏ –∏–º—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            self.bot.send_message(self.message.chat.id, string)
            self.bot.send_message(self.message.chat.id, f'üíæ –ú–∞—Ä—à—Ä—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ú–æ–∏ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥ –∏–º–µ–Ω–µ–º:\n"{name}"')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            self.other_fields['finish'] = finish_name

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Ä—à—Ä—É—Ç –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ (favorites)
            save = json.loads(self.user.parameter.favorites)
            save[name] = {'start': self.other_fields['start'], 'finish': self.other_fields['finish']}
            self.user.parameter.favorites = json.dumps(save, ensure_ascii=False)
            self.user.parameter.save()
            answer = f'{self.__class__.__name__} - {self.stage}'

        self.stage += 1

        return answer


class MyRouter(Executor):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—ã–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞.
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –º–∞—Ä—à—Ä—É—Ç–∞."""

    def execute(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ."""
        answer = None
        if self.__class__.__name__ == IdsForName.get_name_by_id(self.kb_id) or self.kb_id in self.kb_wait:
            # –ó–∞–ø—Ä–æ—Å –æ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–ª–∏ –æ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π (–ø–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º) -
            # —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–∫–∞–∑—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            self.stage = 1

        if self.stage == 0:
            # ---------------- 1 —ç—Ç–∞–ø - –∑–∞–ø—Ä–æ—Å –º–∞—Ä—à—Ä—É—Ç–∞ ----------------
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            favorites = json.loads(self.user.parameter.favorites)
            if not favorites:
                self.bot.send_message(self.message.chat.id, '‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤.')
                return f'{self.__class__.__name__} - {self.stage}'

            # –≠—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –æ–Ω–∞ –∏–º–µ–µ—Ç –æ–¥–∏–Ω id –∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç –≤ —ç—Ç–æ—Ç –∫–ª–∞—Å—Å
            # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –µ–µ –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –±—ã–ª–∞ –∑–∞–ø–æ–º–Ω–µ–Ω–∞
            id_const_kb = str(IdsForName.get_id_by_name(self.__class__.__name__))
            self.kb_wait = [self.keyboard('üöå –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:', favorites.keys(), row=1, kd_id=id_const_kb)]

            answer = f'{self.__class__.__name__} - {self.stage}'
            self.stage = 1
            return answer

        if not self.kb_id:
            return answer  # –¢—É—Ç –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

        if self.stage == 1:
            # ---------------- 2 —ç—Ç–∞–ø - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ----------------
            # –ó–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            self.user.schedule_count += 1

            self.user.save()

            week = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å']
            # –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (1-7), –µ—Å–ª–∏ –¥–∞—Ç–∞ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ,
            # –≤–µ—Ä–Ω–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –Ω–µ–µ, –∏–Ω–∞—á–µ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
            day = Holiday.is_today_holiday()
            day = day if day else datetime.now().isoweekday()

            count = None  # –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä—à—Ä—É—Ç–µ
            favorites = json.loads(self.user.parameter.favorites)
            if self.key_name in favorites:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
                self.other_fields['rout'] = self.key_name

            key_name = self.other_fields['rout']
            logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user.user_name} {self.user.user_id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –º–∞—Ä—à—Ä—É—Ç "{key_name}".')
            print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user.user_name} {self.user.user_id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –º–∞—Ä—à—Ä—É—Ç "{key_name}".')

            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–æ–∫
            start = favorites[key_name].get('start', None)
            finish = favorites[key_name].get('finish', None)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å –ø–æ–ø—Ä–∞–≤–∫–æ–π –Ω–∞ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
            time_now = date_now().time()  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å

            # –í–∏–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            mode = 'time'  # –ü–æ –≤—Ä–µ–º–µ–Ω–∏, –¥–ª—è –±–ª–∏–∂–∞–π—à–∏—Ö –∞–≤—Ç–æ–±—É—Å–æ–≤

            # ----------------------------------------------------------
            # –í–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
            # –ó–Ω–∞—á–∏—Ç –≤—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å.
            if self.key_name in week:
                mode = 'bus'  # –ü–æ –∞–≤—Ç–æ–±—É—Å–∞–º, –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
                schedule = full_schedule(start, week.index(self.key_name) + 1)

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram API.
                # –≠—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤.
                TELEGRAM_LIMIT = 4096

                spece = None
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è. –û–Ω –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ.
                text = f"üöå –í—Å–µ –∞–≤—Ç–æ–±—É—Å—ã –æ—Ç {start} –Ω–∞ –ø–µ—Ä–∏–æ–¥ 24 —á–∞—Å–∞ ({self.key_name})"

                # –ù–∞—á–∏–Ω–∞–µ–º –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∞–≤—Ç–æ–±—É—Å–æ–≤.
                for bus, routers_times in schedule.items():
                    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –∞–≤—Ç–æ–±—É—Å–µ.
                    bus_content = ""
                    if spece != bus.number:
                        spece = bus.number
                        # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑–Ω—ã—Ö –∞–≤—Ç–æ–±—É—Å–∞—Ö.
                        bus_content += "\n\n"

                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞.
                    bus_content += "üöå ‚Ññ" + bus.number
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ä—à—Ä—É—Ç–∞—Ö –∏ –≤—Ä–µ–º–µ–Ω–∏.
                    for routers, times in routers_times.items():
                        bus_content += "\n" + ', '.join([f"*{router.start.name} - {router.end.name}*" for router in routers[:-1]])
                        bus_content += "\n" + ', '.join([time.strftime("%H:%M") for time in times])

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—Å–∏—Ç –ª–∏ –æ–±—â–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ª–∏–º–∏—Ç,
                    # –µ—Å–ª–∏ –º—ã –¥–æ–±–∞–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∞–≤—Ç–æ–±—É—Å–µ.
                    if len(text) + len(bus_content) > TELEGRAM_LIMIT:
                        # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–∂–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
                        self.bot.send_message(self.message.chat.id, text, parse_mode='Markdown')
                        # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –∞–≤—Ç–æ–±—É—Å–µ.
                        # .lstrip() —É–¥–∞–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ –Ω–∞—á–∞–ª–µ.
                        text = bus_content.lstrip()
                    else:
                        # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.
                        text += bus_content

                # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç,
                # –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.
                if text:
                    self.bot.send_message(self.message.chat.id, text, parse_mode='Markdown')

            # ----------------------------------------------------------
            # –ù—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∞–≤—Ç–æ–±—É—Å—ã
            if mode == 'time':
                # –ó–∞ –∫–∞–∫–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                if count is None:
                    count = favorites[key_name].get('count', '30 –º–∏–Ω—É—Ç')
                delta = {
                    '15 –º–∏–Ω—É—Ç': 15,
                    '30 –º–∏–Ω—É—Ç': 30,
                    '1 —á–∞—Å': 60,
                    '2 —á–∞—Å–∞': 120,
                    '3 —á–∞—Å–∞': 180,
                    '24 —á–∞—Å–∞': 1440
                }

                try:
                    # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    # –§–æ—Ä–º–∞—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–∞–π–ª–µ
                    # "–õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –∏ –∞–≤—Ç–æ–±—É—Å–æ–≤ –Ω–∞ –Ω–∏—Ö.txt"
                    schedule = answer_by_two_busstop(start, finish)
                except:
                    # –ï—Å–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
                    return (f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–æ–≤–µ—Ç—É—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç.')

                time_now = date_now().time()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
                # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
                gen = time_generator(list(schedule), time_now, delta[count])
                rout = ""
                if  f"{start} - {finish}" != key_name:
                    rout = f'("{start}" - "{finish}")\n'
                text = f'üîÑ  –ú–∞—Ä—à—Ä—É—Ç "{key_name}"\n{rout}–ê–≤—Ç–æ–±—É—Å—ã –Ω–∞ –ø–µ—Ä–∏–æ–¥ {count} ({week[day]})\n\n'
                text_list = ""
                for time in gen:
                    # –ì–æ—Ç–æ–≤–∏–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–≤–æ–¥–∞
                    time_str = time.strftime("%H:%M")  # –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–±—É—Å–∞ (str)
                    text_list += f'‚åö {time_str}     '  # –ù–∞–¥—Ü–∞—Ç—å —á–∞—Å–æ–≤ –º–∏–Ω—É—Ç

                    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–±—É—Å–æ–≤
                    text_list += "–ê–≤—Ç–æ–±—É—Å ‚Ññ" + preparing_bus_list(schedule[time], start)
                if not text_list:
                    text_list = f'‚ö†Ô∏è –ù–µ—Ç –∞–≤—Ç–æ–±—É—Å–æ–≤ –Ω–∞ –ø–µ—Ä–∏–æ–¥ - *{count}*.'

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                self.bot.send_message(self.message.chat.id, text + text_list, parse_mode='Markdown')

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            self.kb_wait = [self.keyboard(f'üìÜ –ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:', week, row=7)]
            answer = f'{self.__class__.__name__} - {self.stage}'

        self.stage = 3

        return answer


class MyRouterSetting(Executor):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º.
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—ã–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:
        - –í—ã–±–æ—Ä –∞–≤—Ç–æ–±—É—Å–æ–≤ (–û—Ç–∫–ª—é—á–µ–Ω–æ)
        - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –ø–æ –∞–≤—Ç–æ–±—É—Å–∞–º) (–æ—Ç–∫–ª—é—á–µ–Ω–æ)
        - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–∏–∂–∞–π—à–∏—Ö –∞–≤—Ç–æ–±—É—Å–æ–≤
        - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç
        - –£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
    """

    def make_checking_dict_by_list(self, ful_list: list, check_list: list):
        """–°–æ–∑–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∏–∑ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–∫–ª—é—á–∏),
        —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ True –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–æ –≤—Ç–æ—Ä–æ–º —Å–ø–∏—Å–∫–µ,
        –∏ False –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {—ç–ª–µ–º–µ–Ω—Ç: True/False}.
        """
        check_dict = dict()
        for item in ful_list:
            if item in check_list:
                check_dict[item] = True
            else:
                check_dict[item] = False
        return check_dict

    def make_bus_list_by_buss(self, busstop_id: str):
        """–°–æ–∑–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∞–≤—Ç–æ–±—É—Å–æ–≤ —Å –ø–æ–º–µ—á–µ–Ω–Ω—ã–º–∏ (–≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏).
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç id –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–±—É—Å–æ–≤ –±–µ—Ä–µ—Ç –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {–∞–≤—Ç–æ–±—É—Å: True/False}.
        """
        bus_stop = BusStop.objects.get(external_id=busstop_id)
        buses_obj = bus_stop.get_bus_by_stop()
        buses = [bus.number for bus in buses_obj]
        return self.make_checking_dict_by_list(buses, self.other_fields['favorites']['check'])

    def get_favorite(self, name: str):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞—Ä—à—Ä—É—Ç–µ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞."""
        favorites = json.loads(self.user.parameter.favorites)
        return favorites[name]

    def set_favorite(self, name: str, value):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä—à—Ä—É—Ç–µ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º.
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –∏ —Å–ª–æ–≤–∞—Ä—å —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
        favorites = json.loads(self.user.parameter.favorites)
        favorites[name] = value
        self.user.parameter.favorites = json.dumps(favorites, ensure_ascii=False)
        self.user.parameter.save()

    def execute(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ."""
        answer = None
        menu = {
            # '–í—ã–±–æ—Ä –∞–≤—Ç–æ–±—É—Å–æ–≤': 2.0,
            # '–í–∏–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è': 3.0,
            '–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏': 4.0,
            '–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç': 5.0,
            '–£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç': 6.0
        }

        # –ó–∞–ø—Ä–æ—Å –æ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (—ç—Ç–æ –≤–º–µ—Å—Ç–æ self.stage == 1)
        if self.__class__.__name__ == IdsForName.get_name_by_id(self.kb_id):
            # ---------------- 1 —ç—Ç–∞–ø - –≤—ã–≤–æ–¥ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è ----------------
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä—à—Ä—É—Ç–µ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
            favorites = json.loads(self.user.parameter.favorites)
            self.other_fields['name_rout'] = self.key_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
            self.other_fields['favorites'] = favorites[self.key_name]  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–∞—Ä—à—Ä—É—Ç–∞

            # –í—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
            self.kb_wait = [self.keyboard(f'üîß –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–µ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞\n"{self.other_fields["name_rout"]}":',
                                          menu.keys(), row=1)]
            self.stage = 10
            return f'{self.__class__.__name__} - {self.stage}'

        if self.stage == 0:
            # ---------------- 0 —ç—Ç–∞–ø - –∑–∞–ø—Ä–æ—Å –º–∞—Ä—à—Ä—É—Ç–∞ ----------------
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            favorites = json.loads(self.user.parameter.favorites)

            # –≠—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –æ–Ω–∞ –∏–º–µ–µ—Ç –æ–¥–∏–Ω id –∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç –≤ —ç—Ç–æ—Ç –∫–ª–∞—Å—Å
            # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –µ–µ –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –±—ã–ª–∞ –∑–∞–ø–æ–º–Ω–µ–Ω–∞
            id_const_kb = str(IdsForName.get_id_by_name(self.__class__.__name__))
            self.kb_wait = [self.keyboard('‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞:',
                                          favorites.keys(), row=1, kd_id=id_const_kb)]
            self.stage = 1
            return f'{self.__class__.__name__} - {self.stage}'

        if self.stage == 5.1:
            # ---------------- 5.1 —ç—Ç–∞–ø - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ ----------------
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∏–º—è –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞
            # –ò–º—è –≤–æ—Å–ø—Ä–∏–º–µ—Ç –ª—é–±–æ–µ, –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
            pattern = r'[\n\r"\\]'
            if re.search(pattern, self.message.text):
                self.bot.send_message(self.message.chat.id, '‚ö†Ô∏è –í –Ω–æ–≤–æ–º –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã, '
                                                            '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.')
                return f'{self.__class__.__name__} - {self.stage}'
            favorites = json.loads(self.user.parameter.favorites)
            if self.message.text in favorites:
                self.bot.send_message(self.message.chat.id, '‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, '
                                                            '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.')
                return f'{self.__class__.__name__} - {self.stage}'

            favorites = json.loads(self.user.parameter.favorites)
            new_favorites = dict()
            for key, value in favorites.items():
                if key == self.other_fields['name_rout']:
                    new_favorites[self.message.text] = value
                else:
                    new_favorites[key] = value

            self.other_fields['name_rout'] = self.message.text
            self.other_fields['favorites'] = new_favorites
            self.user.parameter.favorites = json.dumps(new_favorites, ensure_ascii=False)
            self.user.parameter.save()

            self.bot.send_message(self.message.chat.id, f'üíæ –ú–∞—Ä—à—Ä—É—Ç "{self.message.text}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω.')

            self.stage = 0
            return f'{self.__class__.__name__} - {self.stage}'

        if self.kb_id not in self.kb_wait:
            # –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä, –∫–æ—Ç–æ—Ä—ã–µ –æ–∂–∏–¥–∞—é—Ç—Å—è
            return None

        if self.stage == 10:
            # ---------------- 10 —ç—Ç–∞–ø - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é ----------------
            self.stage = menu[self.key_name]
            answer = f'{self.__class__.__name__} - {self.stage}'

        if self.stage == 2.0:
            # ---------------- 2.0 —ç—Ç–∞–ø - –≤—ã–±–æ—Ä –∞–≤—Ç–æ–±—É—Å–æ–≤ ----------------
            # (–æ—Ç–∫–ª—é—á–µ–Ω–æ –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–ª–æ—Å—å –ø–æ–¥ –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º)

            if self.key_name not in menu:
                # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–ª–∏–∫ –ø–æ –∞–≤—Ç–æ–±—É—Å—É –≤ —Å–ø–∏—Å–∫–µ –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –Ω–µ –∏–∑ –º–µ–Ω—é
                if self.key_name in self.other_fields['favorites']['check']:
                    self.other_fields['favorites']['check'].remove(self.key_name)
                else:
                    self.other_fields['favorites']['check'].append(self.key_name)
                    self.other_fields['favorites']['check'].sort()

            # –í—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–º–µ–Ω–æ–π –ø—Ä–µ–¥—ã–¥—É—â–µ–π
            buses = self.make_bus_list_by_buss(self.other_fields['favorites']['start'])
            self.kb_wait = [self.keyboard(f'üöå –í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–±—É—Å—ã –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞\n"{self.other_fields["name_rout"]}":',
                                          buses, row=3, replace=True)]

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º
            self.set_favorite(self.other_fields['name_rout'], self.other_fields['favorites'])

        elif self.stage == 3.0:
            # ---------------- 3.0 —ç—Ç–∞–ø - –≤—ã–±–æ—Ä –≤–∏–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ----------------
            # (–æ—Ç–∫–ª—é—á–µ–Ω–æ –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–ª–æ—Å—å –ø–æ–¥ –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º)

            if self.key_name in menu:
                if 'view' in self.other_fields['favorites']:
                    # –ï—Å–ª–∏ –≤–∏–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, —Ç–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ
                    self.key_name = self.other_fields['favorites']['view']
                else:
                    self.key_name = '–ü–æ –≤—Ä–µ–º–µ–Ω–∏'

            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é –∫ –≤—ã–≤–æ–¥—É —Å —É—á–µ—Ç–æ–º –≤—ã–±–æ—Ä–∞
            menu = self.make_checking_dict_by_list(['–ü–æ –≤—Ä–µ–º–µ–Ω–∏', '–ü–æ –∞–≤—Ç–æ–±—É—Å–∞–º'], [self.key_name])
            # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∑–∞–º–µ–Ω–æ–π –ø—Ä–µ–¥—ã–¥—É—â–µ–π
            self.kb_wait = [self.keyboard(f'üåÑ –í–∏–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞\n"'
                                          f'{self.other_fields["name_rout"]}":', menu, row=1, replace=True)]

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º
            self.other_fields['favorites']['view'] = self.key_name
            self.set_favorite(self.other_fields['name_rout'], self.other_fields['favorites'])

        elif self.stage == 4.0:
            # ---------------- 4.0 —ç—Ç–∞–ø - –≤—ã–±–æ—Ä –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ ----------------
            if self.key_name in menu:
                if 'count' in self.other_fields['favorites']:
                    # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–±—É—Å–æ–≤ —É–∂–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ, —Ç–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ
                    self.key_name = self.other_fields['favorites']['count']
                else:
                    self.key_name = '30 –º–∏–Ω—É—Ç'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

            # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–ª–∏–∫ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∞–≤—Ç–æ–±—É—Å–æ–≤
            menu = self.make_checking_dict_by_list(['15 –º–∏–Ω—É—Ç', '30 –º–∏–Ω—É—Ç', '1 —á–∞—Å', '2 —á–∞—Å–∞', '3 —á–∞—Å–∞', '24 —á–∞—Å–∞'],
                                                   [self.key_name])
            self.kb_wait = [self.keyboard(f'–ó–∞ –∫–∞–∫–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∏–Ω–∞—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ '
                                          f'–ø–æ–∫–∞–∑–∞—Ç –∞–≤—Ç–æ–±—É—Å—ã –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞\n"{self.other_fields["name_rout"]}":',
                                          menu, row=2, replace=True)]

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º
            self.other_fields['favorites']['count'] = self.key_name
            self.set_favorite(self.other_fields['name_rout'], self.other_fields['favorites'])

        elif self.stage == 5.0:
            # ---------------- 5 —ç—Ç–∞–ø - –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ ----------------
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
            self.bot.send_message(self.message.chat.id,
                                  f'‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞\n"{self.other_fields["name_rout"]}":')

            self.stage = 5.1  # 5.1 –≤–Ω–∞—á–∞–ª–µ, –¥–ª—è –¥–æ–ø—É—Å–∫–∞ –≤–≤–æ–¥–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

        elif self.stage == 6.0:
            # ---------------- 6 —ç—Ç–∞–ø - —É–¥–∞–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ ----------------
            # –£–¥–∞–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
            if self.key_name != '–£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç':
                return answer

            if 'del' not in self.other_fields:
                self.other_fields['del'] = 1
                self.bot.send_message(self.message.chat.id,
                                      f'‚ùóÔ∏è –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ "{self.other_fields["name_rout"]}" '
                                      '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–∂–∞–≤ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç"')
                return answer

            favorites = json.loads(self.user.parameter.favorites)
            del favorites[self.other_fields['name_rout']]
            self.user.parameter.favorites = json.dumps(favorites, ensure_ascii=False)
            self.user.parameter.save()

            self.bot.send_message(self.message.chat.id, f'‚ùóÔ∏è–ú–∞—Ä—à—Ä—É—Ç "{self.other_fields["name_rout"]}" —É–¥–∞–ª–µ–Ω.')

            self.stage = 0

        return answer


class ExeMessage(Executor):
    """–ü—Ä–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /message."""

    def execute(self):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å Answer_to_, —Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —á–∞—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º id."""
        text = self.message.text
        chat_id = self.message.chat.id
        user_id = self.message.from_user.id

        # –ï—Å–ª–∏ –≤ –Ω–∞—á–∞–ª–µ —Ç–µ–∫—Å—Ç–∞ Answer_to_ ... - —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ, –æ–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ Answer_to_dddd,
        # –≥–¥–µ dddd - id —á–∞—Ç–∞ –≤ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ–º, –¥–∞–ª–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if text.startswith('Answer_to_'):
            # –†–∞–∑–¥–µ–ª—è–µ–º –ø–µ—Ä–≤—ã–º –ø—Ä–æ–±–µ–ª–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 2 —á–∞—Å—Ç–∏
            chat_id, text = text.split(' ', 1)
            chat_id = int(chat_id.split('_')[2])
            self.bot.send_message(chat_id, f'–û—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:\n{text}')
            ok = 'üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
        else:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É JSON –≤ —Å–ø–∏—Å–æ–∫ (—ç—Ç–æ id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
            admin_ids = settings.ADMINS

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            for admin_id in admin_ids:
                self.bot.send_message(admin_id,
                                      f"üì® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –∏ ID —á–∞—Ç–∞ {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: \n{text}")
                self.bot.send_message(admin_id, f"Answer_to_{chat_id} ")

            ok = "üì® –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!"

        self.bot.send_message(self.message.chat.id, ok)

        return f'{self.__class__.__name__} - 0'
